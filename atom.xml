<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>潜行者</title>
  
  <subtitle>Quick Timeline Notes</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://runblog.cn/"/>
  <updated>2024-03-28T10:23:35.764Z</updated>
  <id>https://runblog.cn/</id>
  
  <author>
    <name>ChrisWong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mysql源码调试环境搭建</title>
    <link href="https://runblog.cn/2020/02/02/Mysql%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://runblog.cn/2020/02/02/Mysql源码调试环境搭建/</id>
    <published>2020-02-02T00:50:22.000Z</published>
    <updated>2024-03-28T10:23:35.764Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mysql源码调试环境搭建"><a href="#Mysql源码调试环境搭建" class="headerlink" title="Mysql源码调试环境搭建"></a>Mysql源码调试环境搭建</h1><p>1、源码下载<br>     git clone <a href="https://github.com/mysql/mysql-server.git" target="_blank" rel="noopener">https://github.com/mysql/mysql-server.git</a><br>2、boost 安装</p><pre><code>- 下载包- 通过brew 进行安装</code></pre><p>3、使用cmake进行编译<br>    ▪     cmake编译配置<br>    -DDOWNLOAD_BOOST=1 -DWITH_BOOST=/Volumes/Transcend/download/<br>    ✓    DOWNLOAD_BOOST使用下载的tar包加载进行启动<br>    ✓    WITH_BOOST boost下载路径</p><pre><code>其他配置：  -DDOWNLOAD_BOOST=1-DWITH_BOOST=/Volumes/Transcend/download/-DWITH_SSL=system-DWITH_DEBUG=1-DCMAKE_INSTALL_PREFIX=/Volumes/Transcend/study-line/mysql/source/mysql-server/build_out-DMYSQL_DATADIR=/Volumes/Transcend/study-line/mysql/source/mysql-server/build_out/data▪    配置文件my.cnf参考：log-error=/Volumes/Transcend/study-line/mysql/source/mysql-server/build_out/log/log.errdatadir=/Volumes/Transcend/study-line/mysql/source/mysql-server/build_out/datapid-file=/Volumes/Transcend/study-line/mysql/source/mysql-server/build_out/user.pidsocket=/tmp/mysql-3306.sockskip-grant-tablesinnodb_file_per_table=1port=33060transaction_isolation = READ-COMMITTED</code></pre><p>[client]</p><h1 id="客户端来源数据的默认字符集"><a href="#客户端来源数据的默认字符集" class="headerlink" title="客户端来源数据的默认字符集"></a>客户端来源数据的默认字符集</h1><p>default-character-set = utf8mb4<br>[mysqld]</p><h1 id="服务端默认字符集"><a href="#服务端默认字符集" class="headerlink" title="服务端默认字符集"></a>服务端默认字符集</h1><p>character-set-server=utf8mb4</p><h1 id="连接层默认字符集"><a href="#连接层默认字符集" class="headerlink" title="连接层默认字符集"></a>连接层默认字符集</h1><p>collation-server=utf8mb4_unicode_ci<br>[mysql]</p><h1 id="数据库默认字符集"><a href="#数据库默认字符集" class="headerlink" title="数据库默认字符集"></a>数据库默认字符集</h1><p>default-character-set = utf8mb4<br>    ▪    mysqld启动配置</p><pre><code> - 初始化（第一次）    --defaults-file=/Volumes/Transcend/study-line/mysql/source/mysql-server/build_out/my.cnf --basedir=/Volumes/Transcend/study-line/mysql/source/mysql-server/build_out --datadir=/Volumes/Transcend/study-line/mysql/source/mysql-server/build_out/data --initialize-insecure- 普通启动--defaults-file=/Volumes/Transcend/study-line/mysql/source/mysql-server/build_out/my.cnf --basedir=/Volumes/Transcend/study-line/mysql/source/mysql-server/build_out --datadir=/Volumes/Transcend/study-line/mysql/source/mysql-server/build_out/data▪    mysql客户端启动     ./cmake-build-debug/client/mysql -u root -h 127.0.0.1 -P33060</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Mysql源码调试环境搭建&quot;&gt;&lt;a href=&quot;#Mysql源码调试环境搭建&quot; class=&quot;headerlink&quot; title=&quot;Mysql源码调试环境搭建&quot;&gt;&lt;/a&gt;Mysql源码调试环境搭建&lt;/h1&gt;&lt;p&gt;1、源码下载&lt;br&gt;     git clone &lt;
      
    
    </summary>
    
    
      <category term="mysql" scheme="https://runblog.cn/tags/mysql/"/>
    
      <category term="mysql源码" scheme="https://runblog.cn/tags/mysql%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Installing-Scheme-on-MacOSX</title>
    <link href="https://runblog.cn/2020/02/02/Installing-Scheme-on-MacOSX/"/>
    <id>https://runblog.cn/2020/02/02/Installing-Scheme-on-MacOSX/</id>
    <published>2020-02-01T21:18:23.000Z</published>
    <updated>2024-03-28T10:23:35.764Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Installing-Scheme-on-Mac-OS-X"><a href="#Installing-Scheme-on-Mac-OS-X" class="headerlink" title="Installing Scheme on Mac OS X"></a>Installing Scheme on Mac OS X</h2><blockquote><p>Scheme是Lisp的一种方言，也是SICP使用的语言，MIT-Scheme是MIT实现的Scheme解析器。接下来按照如下步骤安装Scheme…</p></blockquote><ol><li><p>下载</p><ul><li><p>32位系统</p><p><a href="http://ftp.gnu.org/gnu/mit-scheme/stable.pkg/9.2/mit-scheme-9.2-i386.dmg" target="_blank" rel="noopener">http://ftp.gnu.org/gnu/mit-scheme/stable.pkg/9.2/mit-scheme-9.2-i386.dmg</a></p></li><li><p>64位系统</p><p><a href="http://ftp.gnu.org/gnu/mit-scheme/stable.pkg/9.2/mit-scheme-9.2-x86-64.dmg" target="_blank" rel="noopener">http://ftp.gnu.org/gnu/mit-scheme/stable.pkg/9.2/mit-scheme-9.2-x86-64.dmg</a></p></li></ul></li><li><p>安装</p><p>双击dmg软件，将MIT/GNU S cheme.app拖到Application中</p><p><img src="https://tva1.sinaimg.cn/large/006tNbRwgy1gbh8b6mq2tj30yf0u0auw.jpg" alt="image-20200201213819375"></p></li><li><p>创建scheme命令</p><blockquote><p>为了在能在命令行使用scheme，需要创建scheme的 软链接</p></blockquote></li></ol><p>  3.1. 创建软链接</p><ul><li><p>32位系统</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo ln -s /Applications/MIT\:GNU\ Scheme.app/Contents/Resources /usr/local/lib/mit-scheme-i386</span><br></pre></td></tr></table></figure></li><li><p>64位系统</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo ln -s /Applications/MIT\:GNU\ Scheme.app/Contents/Resources /usr/local/lib/mit-scheme-x86-64</span><br></pre></td></tr></table></figure></li></ul><p>  3.2. Scheme命令</p><ul><li><p>32位系统</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo ln -s /usr/local/lib/mit-scheme-i386/mit-scheme /usr/bin/scheme</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>64位系统</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo ln -s /usr/local/lib/mit-scheme-x86-64/mit-scheme /usr/bin/scheme</span><br></pre></td></tr></table></figure><p><strong>Notes:</strong> </p><p>Q1. 在执行上面命令的时候，会出现 Operation not permitted 的错误，这是因为OS X中引入了SIP特性即使加了<code>sudo</code>（也就是具有root权限）也无法修改系统级的目录，其中就包括了<code>/usr/bin</code>。要解决这个问题有两种做法：一种是比较不安全的就是关闭SIP，也就是rootless特性；另一种是将本要链接到<code>/usr/bin</code>下的改链接到<code>/usr/local/bin</code>下就好了。<br>所以上面的命令改为:</p></li></ul><pre><code>$ sudo ln -s /usr/local/lib/mit-scheme-x86-64/mit-scheme /usr/local/bin/scheme</code></pre><p>   ​    32位的相对应改下即可。<br>   ​     Q2.如果执行完上面scheme还没生效的话，可以增加以下内容到 ~/.bash_profile</p>   <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> alias scheme="/Applications/MIT\:GNU\ Scheme.app/Contents/Resources/mit-scheme"</span><br></pre></td></tr></table></figure><p>引自：<a href="https://jacksonisaac.wordpress.com/2014/03/25/installing-scheme-on-mac-os-x/" target="_blank" rel="noopener">https://jacksonisaac.wordpress.com/2014/03/25/installing-scheme-on-mac-os-x/</a></p><p>OK, let’s do it～～～</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Installing-Scheme-on-Mac-OS-X&quot;&gt;&lt;a href=&quot;#Installing-Scheme-on-Mac-OS-X&quot; class=&quot;headerlink&quot; title=&quot;Installing Scheme on Mac OS X&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="lisp" scheme="https://runblog.cn/categories/lisp/"/>
    
    
      <category term="lisp" scheme="https://runblog.cn/tags/lisp/"/>
    
      <category term="scheme" scheme="https://runblog.cn/tags/scheme/"/>
    
  </entry>
  
  <entry>
    <title>优雅的使用Sourcegraph研读git代码</title>
    <link href="https://runblog.cn/2019/09/17/git/source-graph/"/>
    <id>https://runblog.cn/2019/09/17/git/source-graph/</id>
    <published>2019-09-16T18:51:37.000Z</published>
    <updated>2024-03-28T10:23:35.764Z</updated>
    
    <content type="html"><![CDATA[<h1 id="优雅的使用Sourcegraph研读git代码"><a href="#优雅的使用Sourcegraph研读git代码" class="headerlink" title="优雅的使用Sourcegraph研读git代码"></a>优雅的使用Sourcegraph研读git代码</h1><blockquote><p>  知名流行的代码查看工具 Sourcegraph 日前已宣布开源(Apache License)，代码托管在 GitHub 上 <a href="https://github.com/sourcegraph/sourcegraph。Sourcegraph" target="_blank" rel="noopener">https://github.com/sourcegraph/sourcegraph。Sourcegraph</a> 被大众广为熟知正是因为它支持在 GitHub 上轻松浏览和搜索代码，Sourcegraph 这款 Chrome或者Firefox 插件称得上是开发者必备的插件，它可以让我们像使用 IDE 一样浏览和搜索 GitHub 代码。<br>  Sourcegraph 是一款能够根据语义来把 Web 上的开源代码编入索引的代码搜索浏览工具。你可以从代码仓库和安装包，甚至是函数里搜索代码，同时也可以直接点击被完全创建了链接的代码来阅读文档、跳转到变量定义或者马上找到可用的 Demo。总而言之，你可以在你的 Web 浏览器上完成这一切，而不需要配置任何编辑器。由 Sourcegraph 出品的这款 Chrome 插件，可以非常方便地浏览和搜索 GitHub 上的代码，持跨仓库(repository)搜索、跳转到定义、查找引用等功能，宛若一个功能强大的 IDE。核心功能如跳转到定义(Go-to-definition) —— 浏览文件或查看 pull 请求时，将鼠标悬停在代码上可以查看文档提示，单击即可跳转到定义、查找引用或全文搜索。</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>  sourcegraph 默认的端口为7080，使用docker来安装，脚本如下：<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; docker run --publish 7080:7080 --publish 2633:2633 --rm --volume ~/.sourcegraph/config:/etc/sourcegraph --volume ~/.sourcegraph/data:/var/opt/sourcegraph sourcegraph/server:3.7.2</span><br></pre></td></tr></table></figure></p><p><img src="http://image.runblog.cn/runblog/2019-09-19-sourcegraph-install.png" alt=""></p><p>打开链接：<a href="http://localhost:7080" target="_blank" rel="noopener">http://localhost:7080</a> ,使用邮箱创、密码创建账号登陆即可</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h3><p>  首次启动之后会有提示，注册用户默认做为管理员</p><h3 id="token配置"><a href="#token配置" class="headerlink" title="token配置"></a>token配置</h3><p>  <img src="http://image.runblog.cn/runblog/2019-09-19-sourcegraph-accessToken.png" alt=""></p><h4 id="添加External-services"><a href="#添加External-services" class="headerlink" title="添加External services"></a>添加External services</h4><blockquote><p> Github </p></blockquote><p>  <img src="http://image.runblog.cn/runblog/2019-09-19-external-service.png" alt=""></p><ul><li><p>token</p><p>点击 <a href="https://github.com/settings/tokens/new?scopes=repo&amp;description=Sourcegraph" target="_blank" rel="noopener">https://github.com/settings/tokens/new?scopes=repo&amp;description=Sourcegraph</a> 链接去到github上面增加token，并把生成的token贴到External Service配置里面即可</p></li><li><p>repositoryQuery</p><p>repo的查询搜索方式，可以参考github的查询方式 <a href="https://help.github.com/en/articles/searching-for-repositories" target="_blank" rel="noopener">https://help.github.com/en/articles/searching-for-repositories</a></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">"repositoryQuery": [</span><br><span class="line">   "org:sourcegraph",</span><br><span class="line">   "org:golang",</span><br><span class="line">   "org:netty" // set this to "none" to disable querying</span><br><span class="line">  ],</span><br></pre></td></tr></table></figure></li><li><p>orgs: </p><pre><code>列出你想要研读代码repo的组织organizations</code></pre><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> "orgs": [</span><br><span class="line">      "spring",</span><br><span class="line">      "sourcegraph",</span><br><span class="line">      "golang",</span><br><span class="line">    <span class="string">"netty"</span></span><br><span class="line">],</span><br></pre></td></tr></table></figure></li></ul><ul><li>repos:<pre><code>代码源，例子如下：</code></pre><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">"repos": [</span><br><span class="line"> "sourcegraph/sourcegraph",</span><br><span class="line"> "golang/go",</span><br><span class="line"> <span class="string">"netty/netty"</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ul><ul><li>exclude:<br>Repositories to exclude (overrides repositories from repositoryQuery, orgs, and repos)</li></ul><h2 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h2><p><img src="http://image.runblog.cn/runblog/2019-09-19-sourcegraph-show.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;优雅的使用Sourcegraph研读git代码&quot;&gt;&lt;a href=&quot;#优雅的使用Sourcegraph研读git代码&quot; class=&quot;headerlink&quot; title=&quot;优雅的使用Sourcegraph研读git代码&quot;&gt;&lt;/a&gt;优雅的使用Sourcegraph研
      
    
    </summary>
    
      <category term="工具" scheme="https://runblog.cn/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="代码查看工具" scheme="https://runblog.cn/tags/%E4%BB%A3%E7%A0%81%E6%9F%A5%E7%9C%8B%E5%B7%A5%E5%85%B7/"/>
    
      <category term="git" scheme="https://runblog.cn/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>开发资料收集</title>
    <link href="https://runblog.cn/2018/09/17/%E5%BC%80%E5%8F%91%E8%B5%84%E6%96%99%E6%94%B6%E9%9B%86/"/>
    <id>https://runblog.cn/2018/09/17/开发资料收集/</id>
    <published>2018-09-16T18:51:37.000Z</published>
    <updated>2024-03-28T10:23:35.764Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开发资料收集"><a href="#开发资料收集" class="headerlink" title="开发资料收集"></a>开发资料收集</h1><h2 id="前端开发"><a href="#前端开发" class="headerlink" title="前端开发"></a>前端开发</h2><p>  favico图标生成：<br>  推荐工具：<a href="https://realfavicongenerator.net" target="_blank" rel="noopener">https://realfavicongenerator.net</a><br>  它提供iOS、Android、网页版ico各类图片的生成</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;开发资料收集&quot;&gt;&lt;a href=&quot;#开发资料收集&quot; class=&quot;headerlink&quot; title=&quot;开发资料收集&quot;&gt;&lt;/a&gt;开发资料收集&lt;/h1&gt;&lt;h2 id=&quot;前端开发&quot;&gt;&lt;a href=&quot;#前端开发&quot; class=&quot;headerlink&quot; title=&quot;前
      
    
    </summary>
    
      <category term="开发" scheme="https://runblog.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="前端开发" scheme="https://runblog.cn/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="favico" scheme="https://runblog.cn/tags/favico/"/>
    
      <category term="工具" scheme="https://runblog.cn/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
</feed>
